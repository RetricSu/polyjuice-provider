on:
  push:
    branches: [ main, "add-build-ci" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Clone kicker repository
        uses: actions/checkout@v2
        with:
          repository: RetricSu/godwoken-kicker
          path: tools/kicker/
          ref: master
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: start kicker
        run: cd tools/kicker && make init && make start

      - name: make sure kicker is starting..
        run: cd tools/kicker && make start
      
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Node Cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: build and test
        run: yarn && yarn build && yarn test

      # Login npm
      # - name: Log into registry ${{ env.REGISTRY }}
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ secrets.DOCKERHUB_USERNAME || github.actor }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN || secrets.GHP_CRT }}

      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:
      #     images: ${{ env.REGISTRY }}${{ github.repository_owner == 'nervosnetwork' && 'nervos' || github.repository_owner }}/${{ env.IMAGE_NAME }}

      # # Build and push Docker image with Buildx (don't push on PR)
      # # https://github.com/docker/build-push-action
      # - name: Build and push Docker image to ${{ env.REGISTRY }}${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
      #   if: ${{ github.repository_owner != 'nervosnetwork'}}
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      # # Build and push Docker image with Buildx (don't push on PR)
      # # only for new tag
      # - name: Build and push Docker image to https://hub.docker.com/r/nervos/godwoken-web3-prebuilds
      #   if: ${{ github.repository_owner == 'nervosnetwork' && startsWith(github.ref, 'refs/tags') }}
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   timeout-minutes: 30